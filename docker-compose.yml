version: "3"
networks:  
  default:
      external:
          name: ${NETWORK:-webproxy}
  outside:
      external:
          name: ${SERVICE_NETWORK:-webservices}

services:
  nginx-web:
    image: nginx
    labels:
        com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    container_name: ${NGINX_WEB:-nginx-web}
    restart: unless-stopped 
    ports:
      - "${IP:-0.0.0.0}:${HTTP_PORT:-80}:80"
      - "${IP:-0.0.0.0}:${HTTPS_PORT:-443}:443"
    volumes:
      - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
      - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:ro
      - ${NGINX_FILES_PATH:-./data}/htpasswd:/etc/nginx/htpasswd:ro
    networks:
      - default
      - outside
    logging:
      driver: ${NGINX_WEB_LOG_DRIVER:-json-file}
      options:
        max-size: ${NGINX_WEB_LOG_MAX_SIZE:-4m}
        max-file: ${NGINX_WEB_LOG_MAX_FILE:-10}

  nginx-gen:
    image: jwilder/docker-gen
    command: -notify-sighup ${NGINX_WEB:-nginx-web} -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    container_name: ${DOCKER_GEN:-nginx-gen}
    restart: always
    environment:
      SSL_POLICY: ${SSL_POLICY:-Mozilla-Intermediate}
    volumes:
      - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
      - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:ro
      - ${NGINX_FILES_PATH:-./data}/htpasswd:/etc/nginx/htpasswd:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    networks:
      - default
      - outside
    logging:
      driver: ${NGINX_GEN_LOG_DRIVER:-json-file}
      options:
        max-size: ${NGINX_GEN_LOG_MAX_SIZE:-2m}
        max-file: ${NGINX_GEN_LOG_MAX_FILE:-10}

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: ${LETS_ENCRYPT:-nginx-letsencrypt}
    restart: always
    volumes:
      - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
      - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NGINX_DOCKER_GEN_CONTAINER: ${DOCKER_GEN:-nginx-gen}
      NGINX_PROXY_CONTAINER: ${NGINX_WEB:-nginx-web}
    networks:
      - default
      - outside
    logging:
      driver: ${NGINX_LETSENCRYPT_LOG_DRIVER:-json-file}
      options:
        max-size: ${NGINX_LETSENCRYPT_LOG_MAX_SIZE:-2m}
        max-file: ${NGINX_LETSENCRYPT_LOG_MAX_FILE:-10}


  grafana:    
    image: grafana/grafana
    container_name: grafana-stack
    environment: 
      # VIRTUAL_PORT: 3000
      VIRTUAL_HOST: graf.localhost
      LETSENCRYPT_HOST: graf.localhost
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL} 
    # restart: always  
    #     --env "VIRTUAL_HOST=othersubdomain.yourdomain.tld" \
    #     --env "VIRTUAL_PORT=3000" \
    #     --env "LETSENCRYPT_HOST=othersubdomain.yourdomain.tld" \
    #     --env "LETSENCRYPT_EMAIL=mail@yourdomain.tld" \
  couchpotato:
    build: ./CouchPotato
    image: chrisfactory/couchpotato
    container_name: couchpotato.stack 
    environment:
      TZ: ${TZ}
      PUID: ${UID}
      PGID: ${GID}
      UMASK_SET: 022
      VIRTUAL_HOST: couchpotato.localhost
      LETSENCRYPT_HOST: couchpotato.localhost
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    # volumes:
    #   - ${APP_CONFIG_DIR}/simplifychill.conf/couchpotato:/config
    #   - ${DOWNLOADS_DIR}:/downloads 
      # - ..:/movies 
    # ports:
    #   - 5060:5050
    restart: unless-stopped



  rutorrent:
    build: ./RuTorrent
    image: chrisfactory/rutorrent
    container_name: rutorrent.stack
    environment: 
      TZ: ${TZ}
      PUID: ${UID}
      PGID: ${GID} 
      LETSENCRYPT_HOST: rutorrent.localhost
      VIRTUAL_HOST: rutorrent.localhost
      # VIRTUAL_PORT: 5080
    # volumes:
    #   - ${APP_DIR}/rutorrent:/config:rw
    #   - ${DOWNLOADS_DIR}:/downloads:rw
    ports:
      # - 5050:80
      - 5051:5000
      - 5052:51413
      - 5053:6881/udp
    restart: unless-stopped
  